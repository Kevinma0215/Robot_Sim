<?xml version="1.0"?>
<launch>
  <!-- set params -->
  <arg name="world_name" value="$(find simulation_module)/worlds/line_following_world.world"/>
  <arg name="paused" value="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- resume th logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="debug" value="$(arg debug)" />
  </include>

  <!-- convert xacro to urdf & put on ROS Parameter Server -->
  <param name="robot_description" 
         command="xacro $(find robot_module)/urdf/my_bot.xacro"/>

  <!-- spawn the robot into gazebo -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -param robot_description -model my_bot -x 0 -y 0 -z 0.3" /> 
  
  <!-- control_module my_bot launch file -->
  <include file="$(find control_module)/launch/my_bot_control.launch"/>

</launch>

<!-- ============ Note ======================

To control the car in gazebo, in new terminal: 
  rostopic pub /my_bot/rightWheel_effort_controller/command std_msgs/Float64 "data: 1.0"

To show image from the car, in new terminal:
  rosrun image_view image_view image:=/my_bot/camera1/image_raw

 -->
